jobs:

- job: Android
  pool:
    vmImage: 'windows-latest'

  variables:
    buildConfiguration: 'Release'
    outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: XamarinAndroid@1
    inputs:
      projectFile: '**/*droid*.csproj'
      outputDirectory: '$(outputDirectory)'
      configuration: '$(buildConfiguration)'
      msbuildVersionOption: '16.0'

  - task: AndroidSigning@3
    inputs:
      apksign: false
      zipalign: false
      apkFiles: '$(outputDirectory)/*.apk'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(outputDirectory)'
  - task: AppCenterDistribute@3
    inputs:
      serverEndpoint: 'AppCenterTest'
      appSlug: 'ArkanoSoftware/Template-Mobile-Application-1'
      appFile: './MobileTemplate.Droid/bin/Release/com.companyname.mobiletemplate.dev-Signed.apk'
      symbolsOption: 'Android'
      releaseNotesOption: 'input'
      releaseNotesInput: 'Nota de lanzamiento test'
      destinationType: 'groups'
      distributionGroupId: 'Test'

#- job: iOS
#  pool:
#    vmImage: 'macOS-latest'

#  steps:
  # To manually select a Xamarin SDK version on the Hosted macOS agent, enable this script with the SDK version you want to target
  # https://go.microsoft.com/fwlink/?linkid=871629
#  - script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_4_1 
#    displayName: 'Select Xamarin SDK version'
#    enabled: false

#  - task: NuGetToolInstaller@1

#  - task: NuGetCommand@2
#    inputs:
#      restoreSolution: '**/*.sln'

#  - task: XamariniOS@2
#    inputs:
#      solutionFile: '**/*.sln'
#      configuration: 'Release'
#      buildForSimulator: true
#      packageApp: false